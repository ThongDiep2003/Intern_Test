{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/auth';\n  const endpoint = isLoginMode ? `${API_URL}/login` : `${API_URL}/register`;\n  const payload = isLoginMode ? {\n    email: formData.email,\n    password: formData.password\n  } : formData;\n  try {\n    const response = await fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n    const data = await response.json();\n    if (response.ok) {\n      if (isLoginMode) {\n        localStorage.setItem('token', data.token); // Lưu token vào localStorage\n        navigate('/success');\n      } else {\n        alert('Registration Successful!');\n        navigate('/login');\n      }\n    } else {\n      alert(data.message || 'Something went wrong');\n    }\n  } catch (err) {\n    console.error('Error:', err);\n    alert('An error occurred.');\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","API_URL","process","env","REACT_APP_API_URL","endpoint","isLoginMode","payload","email","formData","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","navigate","alert","message","err","console","error"],"sources":["C:/Users/thegu/Desktop/Internship/frontend/src/components/Form.js"],"sourcesContent":["const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/auth';\r\n  const endpoint = isLoginMode ? `${API_URL}/login` : `${API_URL}/register`;\r\n\r\n  const payload = isLoginMode\r\n    ? { email: formData.email, password: formData.password }\r\n    : formData;\r\n\r\n  try {\r\n    const response = await fetch(endpoint, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      if (isLoginMode) {\r\n        localStorage.setItem('token', data.token); // Lưu token vào localStorage\r\n        navigate('/success');\r\n      } else {\r\n        alert('Registration Successful!');\r\n        navigate('/login');\r\n      }\r\n    } else {\r\n      alert(data.message || 'Something went wrong');\r\n    }\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n    alert('An error occurred.');\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,4BAA4B;EAC7E,MAAMC,QAAQ,GAAGC,WAAW,GAAG,GAAGL,OAAO,QAAQ,GAAG,GAAGA,OAAO,WAAW;EAEzE,MAAMM,OAAO,GAAGD,WAAW,GACvB;IAAEE,KAAK,EAAEC,QAAQ,CAACD,KAAK;IAAEE,QAAQ,EAAED,QAAQ,CAACC;EAAS,CAAC,GACtDD,QAAQ;EAEZ,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACP,QAAQ,EAAE;MACrCQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,OAAO;IAC9B,CAAC,CAAC;IAEF,MAAMW,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAElC,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACf,IAAId,WAAW,EAAE;QACfe,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC;QAC3CC,QAAQ,CAAC,UAAU,CAAC;MACtB,CAAC,MAAM;QACLC,KAAK,CAAC,0BAA0B,CAAC;QACjCD,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC,MAAM;MACLC,KAAK,CAACP,IAAI,CAACQ,OAAO,IAAI,sBAAsB,CAAC;IAC/C;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEF,GAAG,CAAC;IAC5BF,KAAK,CAAC,oBAAoB,CAAC;EAC7B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}