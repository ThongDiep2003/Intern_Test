{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thegu\\\\Desktop\\\\Internship\\\\frontend\\\\src\\\\components\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Form({\n  isLoginMode\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    name: '',\n    phone: ''\n  });\n  const navigate = useNavigate();\n\n  // Kiểm tra trạng thái đăng nhập khi component được render\n  useEffect(() => {\n    const checkLoginStatus = async () => {\n      const token = localStorage.getItem('token'); // Lấy token từ localStorage\n      if (!token) {\n        // Nếu không có token, không cần kiểm tra, cho phép đăng nhập/đăng ký\n        return;\n      }\n      try {\n        // Gọi API để kiểm tra token\n        const response = await fetch('http://localhost:8080/auth/check', {\n          method: 'GET',\n          headers: {\n            Authorization: token\n          } // Gửi token trong headers\n        });\n        if (response.ok) {\n          // Token hợp lệ -> Chuyển hướng đến trang success\n          navigate('/home');\n        } else {\n          // Token không hợp lệ -> Xóa token khỏi localStorage\n          localStorage.removeItem('token');\n        }\n      } catch (err) {\n        console.error('Error verifying token:', err);\n        localStorage.removeItem('token');\n      }\n    };\n    checkLoginStatus();\n  }, [navigate]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/auth';\n    const endpoint = isLoginMode ? `${API_URL}/login` : `${API_URL}/register`;\n    const payload = isLoginMode ? {\n      email: formData.email,\n      password: formData.password\n    } : formData;\n    try {\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        if (isLoginMode) {\n          // Lưu token vào localStorage sau khi đăng nhập thành công\n          localStorage.setItem('token', data.token);\n          navigate('/success'); // Chuyển đến trang thành công\n        } else {\n          alert('Registration Successful!');\n          navigate('/login'); // Chuyển đến trang đăng nhập\n        }\n      } else {\n        alert(data.message || 'Something went wrong');\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      alert('An error occurred.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLoginMode ? 'Login' : 'Register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [!isLoginMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: formData.name,\n          onChange: e => setFormData({\n            ...formData,\n            name: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Phone\",\n          value: formData.phone,\n          onChange: e => setFormData({\n            ...formData,\n            phone: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: formData.email,\n        onChange: e => setFormData({\n          ...formData,\n          email: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        onChange: e => setFormData({\n          ...formData,\n          password: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLoginMode ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"XZ3Lx9ane1S+U8LxLPAFnk7+KaY=\", false, function () {\n  return [useNavigate];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","isLoginMode","_s","formData","setFormData","email","password","name","phone","navigate","checkLoginStatus","token","localStorage","getItem","response","fetch","method","headers","Authorization","ok","removeItem","err","console","error","handleSubmit","e","preventDefault","API_URL","process","env","REACT_APP_API_URL","endpoint","payload","body","JSON","stringify","data","json","setItem","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/thegu/Desktop/Internship/frontend/src/components/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Form({ isLoginMode }) {\r\n  const [formData, setFormData] = useState({ email: '', password: '', name: '', phone: '' });\r\n  const navigate = useNavigate();\r\n\r\n  // Kiểm tra trạng thái đăng nhập khi component được render\r\n  useEffect(() => {\r\n    const checkLoginStatus = async () => {\r\n      const token = localStorage.getItem('token'); // Lấy token từ localStorage\r\n      if (!token) {\r\n        // Nếu không có token, không cần kiểm tra, cho phép đăng nhập/đăng ký\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Gọi API để kiểm tra token\r\n        const response = await fetch('http://localhost:8080/auth/check', {\r\n          method: 'GET',\r\n          headers: { Authorization: token }, // Gửi token trong headers\r\n        });\r\n\r\n        if (response.ok) {\r\n          // Token hợp lệ -> Chuyển hướng đến trang success\r\n          navigate('/home');\r\n        } else {\r\n          // Token không hợp lệ -> Xóa token khỏi localStorage\r\n          localStorage.removeItem('token');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error verifying token:', err);\r\n        localStorage.removeItem('token');\r\n      }\r\n    };\r\n\r\n    checkLoginStatus();\r\n  }, [navigate]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/auth';\r\n    const endpoint = isLoginMode ? `${API_URL}/login` : `${API_URL}/register`;\r\n\r\n    const payload = isLoginMode\r\n      ? { email: formData.email, password: formData.password }\r\n      : formData;\r\n\r\n    try {\r\n      const response = await fetch(endpoint, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        if (isLoginMode) {\r\n          // Lưu token vào localStorage sau khi đăng nhập thành công\r\n          localStorage.setItem('token', data.token);\r\n          navigate('/success'); // Chuyển đến trang thành công\r\n        } else {\r\n          alert('Registration Successful!');\r\n          navigate('/login'); // Chuyển đến trang đăng nhập\r\n        }\r\n      } else {\r\n        alert(data.message || 'Something went wrong');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error:', err);\r\n      alert('An error occurred.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>{isLoginMode ? 'Login' : 'Register'}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {!isLoginMode && (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              value={formData.name}\r\n              onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Phone\"\r\n              value={formData.phone}\r\n              onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\r\n              required\r\n            />\r\n          </>\r\n        )}\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n          required\r\n        />\r\n        <button type=\"submit\">{isLoginMode ? 'Login' : 'Register'}</button>\r\n      </form>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}